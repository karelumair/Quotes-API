version: "3.7"
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: "poetry run"
    command: "gunicorn -w 4 wsgi:flask_app -b 0.0.0.0:5000"
    restart: always
    volumes:
      - ./logs:/api/logs
    network_mode: host
    environment:
      - SERVER_NAME=0.0.0.0
      - MONGODB_HOST=${MONGODB_HOST}
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - ENV=${ENV}
      - LOG_FILE=logs/logs.log
      - CELERY_BROKER_URL=redis://redis
      - CELERY_RESULT_BACKEND=redis://redis
      - LIMITER_STORAGE_URI=redis://redis

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: "poetry run"
    command: "celery -A make_celery worker --loglevel=info"
    restart: always
    volumes:
      - ./logs:/api/logs
    environment:
      - SERVER_NAME=0.0.0.0
      - MONGODB_HOST=${MONGODB_HOST}
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - ENV=${ENV}
      - LOG_FILE=logs/logs.log
      - CELERY_BROKER_URL=redis://redis
      - CELERY_RESULT_BACKEND=redis://redis
      - LIMITER_STORAGE_URI=redis://redis
    links:
      - redis
    depends_on:
      - redis

  redis:
    image: redis
    restart: always

  nginx:
    build: ./nginx
    container_name: nginx
    volumes:
      - ./logs/nginx:/var/log/nginx
    environment:
      - SERVER_NAME=0.0.0.0
    restart: always
    network_mode: host
